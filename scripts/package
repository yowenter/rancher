#!/bin/bash
set -e

source $(dirname $0)/version

ARCH=${ARCH:-"amd64"}
SYSTEM_CHART_DEFAULT_BRANCH=${SYSTEM_CHART_DEFAULT_BRANCH:-"release-v2.4"}
SUFFIX=""
[ "${ARCH}" != "amd64" ] && SUFFIX="_${ARCH}"

cd $(dirname $0)/../package

TAG=${TAG:-${VERSION}${SUFFIX}}
REPO=${REPO:-rancher}
RANCHER_SERVER=${RANCHER_SERVER:-rancher}
RANCHER_AGENT=${RANCHER_AGENT:-rancher-agent}

if echo $TAG | grep -q dirty; then
    TAG=dev
fi

if [ -n "$DRONE_TAG" ]; then
    TAG=$DRONE_TAG
fi

cp ../bin/rancher ../bin/agent ../bin/data.json .

IMAGE=${REPO}/${RANCHER_SERVER}:${TAG}
AGENT_IMAGE=${REPO}/${RANCHER_AGENT}:${TAG}

if [ ${ARCH} == arm64 ]; then
    sed -i -e '$a\' -e 'ENV ETCD_UNSUPPORTED_ARCH=arm64' Dockerfile
fi



sed -i "s/{REPOSITORY}/${REPOSITORY}/g" Dockerfile
sed -i "s/{REPOSITORY}/${REPOSITORY}/g" Dockerfile.agent

sed -i "s/{BASE_IMAGE_SERVER}/${BASE_IMAGE_SERVER}/g" Dockerfile
sed -i "s/{BASE_IMAGE_AGENT}/${BASE_IMAGE_AGENT}/g" Dockerfile.agent

sed -i "s/{BASE_NAMESPACE}/${BASE_NAMESPACE}/g" Dockerfile
sed -i "s/{BASE_NAMESPACE}/${BASE_NAMESPACE}/g" Dockerfile.Agent


docker build --build-arg VERSION=${TAG} --build-arg ARCH=${ARCH} --build-arg IMAGE_REPO=${REPO} --build-arg SYSTEM_CHART_DEFAULT_BRANCH=${SYSTEM_CHART_DEFAULT_BRANCH} -t ${IMAGE} .


docker build --build-arg VERSION=${TAG} --build-arg ARCH=${ARCH} -t ${AGENT_IMAGE} -f Dockerfile.agent .

echo ${IMAGE} > ../dist/images
echo ${AGENT_IMAGE} >> ../dist/images
echo Built ${IMAGE} #${AGENT_IMAGE}
echo

cd ../bin
mkdir -p /tmp/system-charts && git clone --branch $SYSTEM_CHART_DEFAULT_BRANCH https://github.com/rancher/system-charts /tmp/system-charts
TAG=$TAG REPO=${REPO} go run ../pkg/image/export/main.go /tmp/system-charts $IMAGE $AGENT_IMAGE

